{"id":"jsm/shaders/VolumeShader.js","dependencies":[{"name":"/home/alan/Documents/Github/AIDA-3D/package.json","includedInParent":true,"mtime":1604412002093},{"name":"three","loc":{"line":12,"column":7},"parent":"/home/alan/Documents/Github/AIDA-3D/jsm/shaders/VolumeShader.js","resolved":"/home/alan/Documents/Github/AIDA-3D/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VolumeRenderShader1 = void 0;\n\nvar _three = require(\"three\");\n\n/**\n * @author Almar Klein / http://almarklein.org\n *\n * Shaders to render 3D volumes using raycasting.\n * The applied techniques are based on similar implementations in the Visvis and Vispy projects.\n * This is not the only approach, therefore it's marked 1.\n */\nvar VolumeRenderShader1 = {\n  uniforms: {\n    \"u_size\": {\n      value: new _three.Vector3(1, 1, 1)\n    },\n    \"u_renderstyle\": {\n      value: 0\n    },\n    \"u_renderthreshold\": {\n      value: 0.5\n    },\n    \"u_clim\": {\n      value: new _three.Vector2(1, 1)\n    },\n    \"u_data\": {\n      value: null\n    },\n    \"u_cmdata\": {\n      value: null\n    }\n  },\n  vertexShader: [\"\t\tvarying vec4 v_nearpos;\", \"\t\tvarying vec4 v_farpos;\", \"\t\tvarying vec3 v_position;\", \"\t\tmat4 inversemat(mat4 m) {\", // Taken from https://github.com/stackgl/glsl-inverse/blob/master/index.glsl\n  // This function is licenced by the MIT license to Mikola Lysenko\n  \"\t\t\t\tfloat\", \"\t\t\t\ta00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\", \"\t\t\t\ta10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\", \"\t\t\t\ta20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\", \"\t\t\t\ta30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\", \"\t\t\t\tb00 = a00 * a11 - a01 * a10,\", \"\t\t\t\tb01 = a00 * a12 - a02 * a10,\", \"\t\t\t\tb02 = a00 * a13 - a03 * a10,\", \"\t\t\t\tb03 = a01 * a12 - a02 * a11,\", \"\t\t\t\tb04 = a01 * a13 - a03 * a11,\", \"\t\t\t\tb05 = a02 * a13 - a03 * a12,\", \"\t\t\t\tb06 = a20 * a31 - a21 * a30,\", \"\t\t\t\tb07 = a20 * a32 - a22 * a30,\", \"\t\t\t\tb08 = a20 * a33 - a23 * a30,\", \"\t\t\t\tb09 = a21 * a32 - a22 * a31,\", \"\t\t\t\tb10 = a21 * a33 - a23 * a31,\", \"\t\t\t\tb11 = a22 * a33 - a23 * a32,\", \"\t\t\t\tdet = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\", \"\t\treturn mat4(\", \"\t\t\t\ta11 * b11 - a12 * b10 + a13 * b09,\", \"\t\t\t\ta02 * b10 - a01 * b11 - a03 * b09,\", \"\t\t\t\ta31 * b05 - a32 * b04 + a33 * b03,\", \"\t\t\t\ta22 * b04 - a21 * b05 - a23 * b03,\", \"\t\t\t\ta12 * b08 - a10 * b11 - a13 * b07,\", \"\t\t\t\ta00 * b11 - a02 * b08 + a03 * b07,\", \"\t\t\t\ta32 * b02 - a30 * b05 - a33 * b01,\", \"\t\t\t\ta20 * b05 - a22 * b02 + a23 * b01,\", \"\t\t\t\ta10 * b10 - a11 * b08 + a13 * b06,\", \"\t\t\t\ta01 * b08 - a00 * b10 - a03 * b06,\", \"\t\t\t\ta30 * b04 - a31 * b02 + a33 * b00,\", \"\t\t\t\ta21 * b02 - a20 * b04 - a23 * b00,\", \"\t\t\t\ta11 * b07 - a10 * b09 - a12 * b06,\", \"\t\t\t\ta00 * b09 - a01 * b07 + a02 * b06,\", \"\t\t\t\ta31 * b01 - a30 * b03 - a32 * b00,\", \"\t\t\t\ta20 * b03 - a21 * b01 + a22 * b00) / det;\", \"\t\t}\", \"\t\tvoid main() {\", // Prepare transforms to map to \"camera view\". See also:\n  // https://threejs.org/docs/#api/renderers/webgl/WebGLProgram\n  \"\t\t\t\tmat4 viewtransformf = modelViewMatrix;\", \"\t\t\t\tmat4 viewtransformi = inversemat(modelViewMatrix);\", // Project local vertex coordinate to camera position. Then do a step\n  // backward (in cam coords) to the near clipping plane, and project back. Do\n  // the same for the far clipping plane. This gives us all the information we\n  // need to calculate the ray and truncate it to the viewing cone.\n  \"\t\t\t\tvec4 position4 = vec4(position, 1.0);\", \"\t\t\t\tvec4 pos_in_cam = viewtransformf * position4;\", // Intersection of ray and near clipping plane (z = -1 in clip coords)\n  \"\t\t\t\tpos_in_cam.z = -pos_in_cam.w;\", \"\t\t\t\tv_nearpos = viewtransformi * pos_in_cam;\", // Intersection of ray and far clipping plane (z = +1 in clip coords)\n  \"\t\t\t\tpos_in_cam.z = pos_in_cam.w;\", \"\t\t\t\tv_farpos = viewtransformi * pos_in_cam;\", // Set varyings and output pos\n  \"\t\t\t\tv_position = position;\", \"\t\t\t\tgl_Position = projectionMatrix * viewMatrix * modelMatrix * position4;\", \"\t\t}\"].join(\"\\n\"),\n  fragmentShader: [\"\t\tprecision highp float;\", \"\t\tprecision mediump sampler3D;\", \"\t\tuniform vec3 u_size;\", \"\t\tuniform int u_renderstyle;\", \"\t\tuniform float u_renderthreshold;\", \"\t\tuniform vec2 u_clim;\", \"\t\tuniform sampler3D u_data;\", \"\t\tuniform sampler2D u_cmdata;\", \"\t\tvarying vec3 v_position;\", \"\t\tvarying vec4 v_nearpos;\", \"\t\tvarying vec4 v_farpos;\", // The maximum distance through our rendering volume is sqrt(3).\n  \"\t\tconst int MAX_STEPS = 887;\t// 887 for 512^3, 1774 for 1024^3\", \"\t\tconst int REFINEMENT_STEPS = 4;\", \"\t\tconst float relative_step_size = 1.0;\", \"\t\tconst vec4 ambient_color = vec4(0.2, 0.4, 0.2, 1.0);\", \"\t\tconst vec4 diffuse_color = vec4(0.8, 0.2, 0.2, 1.0);\", \"\t\tconst vec4 specular_color = vec4(1.0, 1.0, 1.0, 1.0);\", \"\t\tconst float shininess = 40.0;\", \"\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);\", \"\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);\", \"\t\tfloat sample1(vec3 texcoords);\", \"\t\tvec4 apply_colormap(float val);\", \"\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray);\", \"\t\tvoid main() {\", // Normalize clipping plane info\n  \"\t\t\t\tvec3 farpos = v_farpos.xyz / v_farpos.w;\", \"\t\t\t\tvec3 nearpos = v_nearpos.xyz / v_nearpos.w;\", // Calculate unit vector pointing in the view direction through this fragment.\n  \"\t\t\t\tvec3 view_ray = normalize(nearpos.xyz - farpos.xyz);\", // Compute the (negative) distance to the front surface or near clipping plane.\n  // v_position is the back face of the cuboid, so the initial distance calculated in the dot\n  // product below is the distance from near clip plane to the back of the cuboid\n  \"\t\t\t\tfloat distance = dot(nearpos - v_position, view_ray);\", \"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.x) / view_ray.x,\", \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.x - 0.5 - v_position.x) / view_ray.x));\", \"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.y) / view_ray.y,\", \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.y - 0.5 - v_position.y) / view_ray.y));\", \"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.z) / view_ray.z,\", \"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.z - 0.5 - v_position.z) / view_ray.z));\", // Now we have the starting position on the front surface\n  \"\t\t\t\tvec3 front = v_position + view_ray * distance;\", // Decide how many steps to take\n  \"\t\t\t\tint nsteps = int(-distance / relative_step_size + 0.5);\", \"\t\t\t\tif ( nsteps < 1 )\", \"\t\t\t\t\t\tdiscard;\", // Get starting location and step vector in texture coordinates\n  \"\t\t\t\tvec3 step = ((v_position - front) / u_size) / float(nsteps);\", \"\t\t\t\tvec3 start_loc = front / u_size;\", // For testing: show the number of steps. This helps to establish\n  // whether the rays are correctly oriented\n  //'gl_FragColor = vec4(0.0, float(nsteps) / 1.0 / u_size.x, 1.0, 1.0);',\n  //'return;',\n  \"\t\t\t\tif (u_renderstyle == 0)\", \"\t\t\t\t\t\tcast_mip(start_loc, step, nsteps, view_ray);\", \"\t\t\t\telse if (u_renderstyle == 1)\", \"\t\t\t\t\t\tcast_iso(start_loc, step, nsteps, view_ray);\", \"\t\t\t\tif (gl_FragColor.a < 0.05)\", \"\t\t\t\t\t\tdiscard;\", \"\t\t}\", \"\t\tfloat sample1(vec3 texcoords) {\", \"\t\t\t\t/* Sample float value from a 3D texture. Assumes intensity data. */\", \"\t\t\t\treturn texture(u_data, texcoords.xyz).r;\", \"\t\t}\", \"\t\tvec4 apply_colormap(float val) {\", \"\t\t\t\tval = (val - u_clim[0]) / (u_clim[1] - u_clim[0]);\", \"\t\t\t\treturn texture2D(u_cmdata, vec2(val, 0.5));\", \"\t\t}\", \"\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {\", \"\t\t\t\tfloat max_val = -1e6;\", \"\t\t\t\tint max_i = 100;\", \"\t\t\t\tvec3 loc = start_loc;\", // Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n  // non-constant expression. So we use a hard-coded max, and an additional condition\n  // inside the loop.\n  \"\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {\", \"\t\t\t\t\t\tif (iter >= nsteps)\", \"\t\t\t\t\t\t\t\tbreak;\", // Sample from the 3D texture\n  \"\t\t\t\t\t\tfloat val = sample1(loc);\", // Apply MIP operation\n  \"\t\t\t\t\t\tif (val > max_val) {\", \"\t\t\t\t\t\t\t\tmax_val = val;\", \"\t\t\t\t\t\t\t\tmax_i = iter;\", \"\t\t\t\t\t\t}\", // Advance location deeper into the volume\n  \"\t\t\t\t\t\tloc += step;\", \"\t\t\t\t}\", // Refine location, gives crispier images\n  \"\t\t\t\tvec3 iloc = start_loc + step * (float(max_i) - 0.5);\", \"\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);\", \"\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {\", \"\t\t\t\t\t\tmax_val = max(max_val, sample1(iloc));\", \"\t\t\t\t\t\tiloc += istep;\", \"\t\t\t\t}\", // Resolve final color\n  \"\t\t\t\tgl_FragColor = apply_colormap(max_val);\", \"\t\t}\", \"\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {\", \"\t\t\t\tgl_FragColor = vec4(0.0);\t// init transparent\", \"\t\t\t\tvec4 color3 = vec4(0.0);\t// final color\", \"\t\t\t\tvec3 dstep = 1.5 / u_size;\t// step to sample derivative\", \"\t\t\t\tvec3 loc = start_loc;\", \"\t\t\t\tfloat low_threshold = u_renderthreshold - 0.02 * (u_clim[1] - u_clim[0]);\", // Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n  // non-constant expression. So we use a hard-coded max, and an additional condition\n  // inside the loop.\n  \"\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {\", \"\t\t\t\t\t\tif (iter >= nsteps)\", \"\t\t\t\t\t\t\t\tbreak;\", // Sample from the 3D texture\n  \"\t\t\t\t\t\tfloat val = sample1(loc);\", \"\t\t\t\t\t\tif (val > low_threshold) {\", // Take the last interval in smaller steps\n  \"\t\t\t\t\t\t\t\tvec3 iloc = loc - 0.5 * step;\", \"\t\t\t\t\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);\", \"\t\t\t\t\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {\", \"\t\t\t\t\t\t\t\t\t\tval = sample1(iloc);\", \"\t\t\t\t\t\t\t\t\t\tif (val > u_renderthreshold) {\", \"\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = add_lighting(val, iloc, dstep, view_ray);\", \"\t\t\t\t\t\t\t\t\t\t\t\treturn;\", \"\t\t\t\t\t\t\t\t\t\t}\", \"\t\t\t\t\t\t\t\t\t\tiloc += istep;\", \"\t\t\t\t\t\t\t\t}\", \"\t\t\t\t\t\t}\", // Advance location deeper into the volume\n  \"\t\t\t\t\t\tloc += step;\", \"\t\t\t\t}\", \"\t\t}\", \"\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray)\", \"\t\t{\", // Calculate color by incorporating lighting\n  // View direction\n  \"\t\t\t\tvec3 V = normalize(view_ray);\", // calculate normal vector from gradient\n  \"\t\t\t\tvec3 N;\", \"\t\t\t\tfloat val1, val2;\", \"\t\t\t\tval1 = sample1(loc + vec3(-step[0], 0.0, 0.0));\", \"\t\t\t\tval2 = sample1(loc + vec3(+step[0], 0.0, 0.0));\", \"\t\t\t\tN[0] = val1 - val2;\", \"\t\t\t\tval = max(max(val1, val2), val);\", \"\t\t\t\tval1 = sample1(loc + vec3(0.0, -step[1], 0.0));\", \"\t\t\t\tval2 = sample1(loc + vec3(0.0, +step[1], 0.0));\", \"\t\t\t\tN[1] = val1 - val2;\", \"\t\t\t\tval = max(max(val1, val2), val);\", \"\t\t\t\tval1 = sample1(loc + vec3(0.0, 0.0, -step[2]));\", \"\t\t\t\tval2 = sample1(loc + vec3(0.0, 0.0, +step[2]));\", \"\t\t\t\tN[2] = val1 - val2;\", \"\t\t\t\tval = max(max(val1, val2), val);\", \"\t\t\t\tfloat gm = length(N); // gradient magnitude\", \"\t\t\t\tN = normalize(N);\", // Flip normal so it points towards viewer\n  \"\t\t\t\tfloat Nselect = float(dot(N, V) > 0.0);\", \"\t\t\t\tN = (2.0 * Nselect - 1.0) * N;\t// ==\tNselect * N - (1.0-Nselect)*N;\", // Init colors\n  \"\t\t\t\tvec4 ambient_color = vec4(0.0, 0.0, 0.0, 0.0);\", \"\t\t\t\tvec4 diffuse_color = vec4(0.0, 0.0, 0.0, 0.0);\", \"\t\t\t\tvec4 specular_color = vec4(0.0, 0.0, 0.0, 0.0);\", // note: could allow multiple lights\n  \"\t\t\t\tfor (int i=0; i<1; i++)\", \"\t\t\t\t{\", // Get light direction (make sure to prevent zero devision)\n  \"\t\t\t\t\t\tvec3 L = normalize(view_ray);\t//lightDirs[i];\", \"\t\t\t\t\t\tfloat lightEnabled = float( length(L) > 0.0 );\", \"\t\t\t\t\t\tL = normalize(L + (1.0 - lightEnabled));\", // Calculate lighting properties\n  \"\t\t\t\t\t\tfloat lambertTerm = clamp(dot(N, L), 0.0, 1.0);\", \"\t\t\t\t\t\tvec3 H = normalize(L+V); // Halfway vector\", \"\t\t\t\t\t\tfloat specularTerm = pow(max(dot(H, N), 0.0), shininess);\", // Calculate mask\n  \"\t\t\t\t\t\tfloat mask1 = lightEnabled;\", // Calculate colors\n  \"\t\t\t\t\t\tambient_color +=\tmask1 * ambient_color;\t// * gl_LightSource[i].ambient;\", \"\t\t\t\t\t\tdiffuse_color +=\tmask1 * lambertTerm;\", \"\t\t\t\t\t\tspecular_color += mask1 * specularTerm * specular_color;\", \"\t\t\t\t}\", // Calculate final color by componing different components\n  \"\t\t\t\tvec4 final_color;\", \"\t\t\t\tvec4 color = apply_colormap(val);\", \"\t\t\t\tfinal_color = color * (ambient_color + diffuse_color) + specular_color;\", \"\t\t\t\tfinal_color.a = color.a;\", \"\t\t\t\treturn final_color;\", \"\t\t}\"].join(\"\\n\")\n};\nexports.VolumeRenderShader1 = VolumeRenderShader1;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":1,"column":0}},{"generated":{"line":17,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":0}},{"name":"VolumeRenderShader1","generated":{"line":17,"column":4},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":4}},{"generated":{"line":17,"column":23},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":23}},{"generated":{"line":17,"column":26},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":26}},{"name":"uniforms","generated":{"line":18,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":1}},{"name":"uniforms","generated":{"line":18,"column":2},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":1}},{"generated":{"line":18,"column":10},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":9}},{"generated":{"line":18,"column":12},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":19,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":2}},{"generated":{"line":19,"column":14},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":12}},{"name":"value","generated":{"line":20,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":14}},{"name":"value","generated":{"line":20,"column":6},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":14}},{"generated":{"line":20,"column":11},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":19}},{"generated":{"line":20,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":21}},{"name":"Vector3","generated":{"line":20,"column":17},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":25}},{"generated":{"line":20,"column":31},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":21}},{"generated":{"line":20,"column":32},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":34}},{"generated":{"line":20,"column":33},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":21}},{"generated":{"line":20,"column":35},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":37}},{"generated":{"line":20,"column":36},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":21}},{"generated":{"line":20,"column":38},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":40}},{"generated":{"line":20,"column":39},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":21}},{"generated":{"line":21,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":16,"column":12}},{"generated":{"line":21,"column":5},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":22,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":2}},{"generated":{"line":22,"column":21},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":19}},{"name":"value","generated":{"line":23,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":21}},{"name":"value","generated":{"line":23,"column":6},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":21}},{"generated":{"line":23,"column":11},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":26}},{"generated":{"line":23,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":28}},{"generated":{"line":24,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":17,"column":19}},{"generated":{"line":24,"column":5},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":25,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":2}},{"generated":{"line":25,"column":25},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":23}},{"name":"value","generated":{"line":26,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":25}},{"name":"value","generated":{"line":26,"column":6},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":25}},{"generated":{"line":26,"column":11},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":30}},{"generated":{"line":26,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":32}},{"generated":{"line":27,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":18,"column":23}},{"generated":{"line":27,"column":5},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":28,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":2}},{"generated":{"line":28,"column":14},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":12}},{"name":"value","generated":{"line":29,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":14}},{"name":"value","generated":{"line":29,"column":6},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":14}},{"generated":{"line":29,"column":11},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":19}},{"generated":{"line":29,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":21}},{"name":"Vector2","generated":{"line":29,"column":17},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":25}},{"generated":{"line":29,"column":31},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":21}},{"generated":{"line":29,"column":32},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":34}},{"generated":{"line":29,"column":33},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":21}},{"generated":{"line":29,"column":35},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":37}},{"generated":{"line":29,"column":36},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":21}},{"generated":{"line":30,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":19,"column":12}},{"generated":{"line":30,"column":5},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":31,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":2}},{"generated":{"line":31,"column":14},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":12}},{"name":"value","generated":{"line":32,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":14}},{"name":"value","generated":{"line":32,"column":6},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":14}},{"generated":{"line":32,"column":11},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":19}},{"generated":{"line":32,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":21}},{"generated":{"line":33,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":20,"column":12}},{"generated":{"line":33,"column":5},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":34,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":2}},{"generated":{"line":34,"column":16},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":14}},{"name":"value","generated":{"line":35,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":16}},{"name":"value","generated":{"line":35,"column":6},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":16}},{"generated":{"line":35,"column":11},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":21}},{"generated":{"line":35,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":23}},{"generated":{"line":36,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":21,"column":14}},{"generated":{"line":37,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":15,"column":11}},{"generated":{"line":37,"column":3},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":26}},{"name":"vertexShader","generated":{"line":38,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":1}},{"name":"vertexShader","generated":{"line":38,"column":2},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":1}},{"generated":{"line":38,"column":14},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":13}},{"generated":{"line":38,"column":16},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":38,"column":17},"source":"jsm/shaders/VolumeShader.js","original":{"line":24,"column":2}},{"generated":{"line":38,"column":44},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":38,"column":46},"source":"jsm/shaders/VolumeShader.js","original":{"line":25,"column":2}},{"generated":{"line":38,"column":72},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":38,"column":74},"source":"jsm/shaders/VolumeShader.js","original":{"line":26,"column":2}},{"generated":{"line":38,"column":102},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":38,"column":104},"source":"jsm/shaders/VolumeShader.js","original":{"line":28,"column":2}},{"generated":{"line":38,"column":133},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":38,"column":135},"source":"jsm/shaders/VolumeShader.js","original":{"line":29,"column":2}},{"generated":{"line":39,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":30,"column":2}},{"generated":{"line":40,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":31,"column":2}},{"generated":{"line":40,"column":13},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":15},"source":"jsm/shaders/VolumeShader.js","original":{"line":32,"column":2}},{"generated":{"line":40,"column":80},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":82},"source":"jsm/shaders/VolumeShader.js","original":{"line":33,"column":2}},{"generated":{"line":40,"column":147},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":149},"source":"jsm/shaders/VolumeShader.js","original":{"line":34,"column":2}},{"generated":{"line":40,"column":214},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":216},"source":"jsm/shaders/VolumeShader.js","original":{"line":35,"column":2}},{"generated":{"line":40,"column":281},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":283},"source":"jsm/shaders/VolumeShader.js","original":{"line":37,"column":2}},{"generated":{"line":40,"column":317},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":319},"source":"jsm/shaders/VolumeShader.js","original":{"line":38,"column":2}},{"generated":{"line":40,"column":353},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":355},"source":"jsm/shaders/VolumeShader.js","original":{"line":39,"column":2}},{"generated":{"line":40,"column":389},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":391},"source":"jsm/shaders/VolumeShader.js","original":{"line":40,"column":2}},{"generated":{"line":40,"column":425},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":427},"source":"jsm/shaders/VolumeShader.js","original":{"line":41,"column":2}},{"generated":{"line":40,"column":461},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":463},"source":"jsm/shaders/VolumeShader.js","original":{"line":42,"column":2}},{"generated":{"line":40,"column":497},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":499},"source":"jsm/shaders/VolumeShader.js","original":{"line":43,"column":2}},{"generated":{"line":40,"column":533},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":535},"source":"jsm/shaders/VolumeShader.js","original":{"line":44,"column":2}},{"generated":{"line":40,"column":569},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":571},"source":"jsm/shaders/VolumeShader.js","original":{"line":45,"column":2}},{"generated":{"line":40,"column":605},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":607},"source":"jsm/shaders/VolumeShader.js","original":{"line":46,"column":2}},{"generated":{"line":40,"column":641},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":643},"source":"jsm/shaders/VolumeShader.js","original":{"line":47,"column":2}},{"generated":{"line":40,"column":677},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":679},"source":"jsm/shaders/VolumeShader.js","original":{"line":48,"column":2}},{"generated":{"line":40,"column":713},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":715},"source":"jsm/shaders/VolumeShader.js","original":{"line":50,"column":2}},{"generated":{"line":40,"column":797},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":799},"source":"jsm/shaders/VolumeShader.js","original":{"line":52,"column":2}},{"generated":{"line":40,"column":815},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":817},"source":"jsm/shaders/VolumeShader.js","original":{"line":53,"column":2}},{"generated":{"line":40,"column":857},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":859},"source":"jsm/shaders/VolumeShader.js","original":{"line":54,"column":2}},{"generated":{"line":40,"column":899},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":901},"source":"jsm/shaders/VolumeShader.js","original":{"line":55,"column":2}},{"generated":{"line":40,"column":941},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":943},"source":"jsm/shaders/VolumeShader.js","original":{"line":56,"column":2}},{"generated":{"line":40,"column":983},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":985},"source":"jsm/shaders/VolumeShader.js","original":{"line":57,"column":2}},{"generated":{"line":40,"column":1025},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1027},"source":"jsm/shaders/VolumeShader.js","original":{"line":58,"column":2}},{"generated":{"line":40,"column":1067},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1069},"source":"jsm/shaders/VolumeShader.js","original":{"line":59,"column":2}},{"generated":{"line":40,"column":1109},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1111},"source":"jsm/shaders/VolumeShader.js","original":{"line":60,"column":2}},{"generated":{"line":40,"column":1151},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1153},"source":"jsm/shaders/VolumeShader.js","original":{"line":61,"column":2}},{"generated":{"line":40,"column":1193},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1195},"source":"jsm/shaders/VolumeShader.js","original":{"line":62,"column":2}},{"generated":{"line":40,"column":1235},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1237},"source":"jsm/shaders/VolumeShader.js","original":{"line":63,"column":2}},{"generated":{"line":40,"column":1277},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1279},"source":"jsm/shaders/VolumeShader.js","original":{"line":64,"column":2}},{"generated":{"line":40,"column":1319},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1321},"source":"jsm/shaders/VolumeShader.js","original":{"line":65,"column":2}},{"generated":{"line":40,"column":1361},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1363},"source":"jsm/shaders/VolumeShader.js","original":{"line":66,"column":2}},{"generated":{"line":40,"column":1403},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1405},"source":"jsm/shaders/VolumeShader.js","original":{"line":67,"column":2}},{"generated":{"line":40,"column":1445},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1447},"source":"jsm/shaders/VolumeShader.js","original":{"line":68,"column":2}},{"generated":{"line":40,"column":1494},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1496},"source":"jsm/shaders/VolumeShader.js","original":{"line":69,"column":2}},{"generated":{"line":40,"column":1501},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1503},"source":"jsm/shaders/VolumeShader.js","original":{"line":72,"column":2}},{"generated":{"line":40,"column":1520},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":40,"column":1522},"source":"jsm/shaders/VolumeShader.js","original":{"line":73,"column":2}},{"generated":{"line":41,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":74,"column":2}},{"generated":{"line":42,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":75,"column":2}},{"generated":{"line":42,"column":46},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":42,"column":48},"source":"jsm/shaders/VolumeShader.js","original":{"line":76,"column":2}},{"generated":{"line":42,"column":104},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":42,"column":106},"source":"jsm/shaders/VolumeShader.js","original":{"line":78,"column":2}},{"generated":{"line":43,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":79,"column":2}},{"generated":{"line":44,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":80,"column":2}},{"generated":{"line":45,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":81,"column":2}},{"generated":{"line":46,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":82,"column":2}},{"generated":{"line":46,"column":45},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":46,"column":47},"source":"jsm/shaders/VolumeShader.js","original":{"line":83,"column":2}},{"generated":{"line":46,"column":98},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":46,"column":100},"source":"jsm/shaders/VolumeShader.js","original":{"line":85,"column":2}},{"generated":{"line":47,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":86,"column":2}},{"generated":{"line":47,"column":37},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":47,"column":39},"source":"jsm/shaders/VolumeShader.js","original":{"line":87,"column":2}},{"generated":{"line":47,"column":85},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":47,"column":87},"source":"jsm/shaders/VolumeShader.js","original":{"line":89,"column":2}},{"generated":{"line":48,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":90,"column":2}},{"generated":{"line":48,"column":36},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":48,"column":38},"source":"jsm/shaders/VolumeShader.js","original":{"line":91,"column":2}},{"generated":{"line":48,"column":83},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":48,"column":85},"source":"jsm/shaders/VolumeShader.js","original":{"line":93,"column":2}},{"generated":{"line":49,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":94,"column":2}},{"generated":{"line":49,"column":30},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":49,"column":32},"source":"jsm/shaders/VolumeShader.js","original":{"line":95,"column":2}},{"generated":{"line":49,"column":108},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":49,"column":110},"source":"jsm/shaders/VolumeShader.js","original":{"line":96,"column":2}},{"generated":{"line":49,"column":115},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"name":"join","generated":{"line":49,"column":117},"source":"jsm/shaders/VolumeShader.js","original":{"line":97,"column":3}},{"generated":{"line":49,"column":121},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":49,"column":122},"source":"jsm/shaders/VolumeShader.js","original":{"line":97,"column":9}},{"generated":{"line":49,"column":126},"source":"jsm/shaders/VolumeShader.js","original":{"line":23,"column":15}},{"generated":{"line":49,"column":127},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":26}},{"name":"fragmentShader","generated":{"line":50,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":1}},{"name":"fragmentShader","generated":{"line":50,"column":2},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":1}},{"generated":{"line":50,"column":16},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":15}},{"generated":{"line":50,"column":18},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":19},"source":"jsm/shaders/VolumeShader.js","original":{"line":99,"column":2}},{"generated":{"line":50,"column":45},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":47},"source":"jsm/shaders/VolumeShader.js","original":{"line":100,"column":2}},{"generated":{"line":50,"column":79},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":81},"source":"jsm/shaders/VolumeShader.js","original":{"line":102,"column":2}},{"generated":{"line":50,"column":105},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":107},"source":"jsm/shaders/VolumeShader.js","original":{"line":103,"column":2}},{"generated":{"line":50,"column":137},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":139},"source":"jsm/shaders/VolumeShader.js","original":{"line":104,"column":2}},{"generated":{"line":50,"column":175},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":177},"source":"jsm/shaders/VolumeShader.js","original":{"line":105,"column":2}},{"generated":{"line":50,"column":201},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":203},"source":"jsm/shaders/VolumeShader.js","original":{"line":107,"column":2}},{"generated":{"line":50,"column":232},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":234},"source":"jsm/shaders/VolumeShader.js","original":{"line":108,"column":2}},{"generated":{"line":50,"column":265},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":267},"source":"jsm/shaders/VolumeShader.js","original":{"line":110,"column":2}},{"generated":{"line":50,"column":295},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":297},"source":"jsm/shaders/VolumeShader.js","original":{"line":111,"column":2}},{"generated":{"line":50,"column":324},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":326},"source":"jsm/shaders/VolumeShader.js","original":{"line":112,"column":2}},{"generated":{"line":50,"column":352},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":50,"column":354},"source":"jsm/shaders/VolumeShader.js","original":{"line":114,"column":2}},{"generated":{"line":51,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":115,"column":2}},{"generated":{"line":51,"column":66},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":68},"source":"jsm/shaders/VolumeShader.js","original":{"line":116,"column":2}},{"generated":{"line":51,"column":103},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":105},"source":"jsm/shaders/VolumeShader.js","original":{"line":117,"column":2}},{"generated":{"line":51,"column":146},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":148},"source":"jsm/shaders/VolumeShader.js","original":{"line":118,"column":2}},{"generated":{"line":51,"column":204},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":206},"source":"jsm/shaders/VolumeShader.js","original":{"line":119,"column":2}},{"generated":{"line":51,"column":262},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":264},"source":"jsm/shaders/VolumeShader.js","original":{"line":120,"column":2}},{"generated":{"line":51,"column":321},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":323},"source":"jsm/shaders/VolumeShader.js","original":{"line":121,"column":2}},{"generated":{"line":51,"column":356},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":358},"source":"jsm/shaders/VolumeShader.js","original":{"line":123,"column":2}},{"generated":{"line":51,"column":430},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":432},"source":"jsm/shaders/VolumeShader.js","original":{"line":124,"column":2}},{"generated":{"line":51,"column":504},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":506},"source":"jsm/shaders/VolumeShader.js","original":{"line":126,"column":2}},{"generated":{"line":51,"column":540},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":542},"source":"jsm/shaders/VolumeShader.js","original":{"line":127,"column":2}},{"generated":{"line":51,"column":577},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":579},"source":"jsm/shaders/VolumeShader.js","original":{"line":128,"column":2}},{"generated":{"line":51,"column":648},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":650},"source":"jsm/shaders/VolumeShader.js","original":{"line":131,"column":2}},{"generated":{"line":51,"column":667},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":51,"column":669},"source":"jsm/shaders/VolumeShader.js","original":{"line":132,"column":2}},{"generated":{"line":52,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":133,"column":2}},{"generated":{"line":52,"column":48},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":52,"column":50},"source":"jsm/shaders/VolumeShader.js","original":{"line":134,"column":2}},{"generated":{"line":52,"column":99},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":52,"column":101},"source":"jsm/shaders/VolumeShader.js","original":{"line":136,"column":2}},{"generated":{"line":53,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":137,"column":2}},{"generated":{"line":53,"column":60},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":53,"column":62},"source":"jsm/shaders/VolumeShader.js","original":{"line":139,"column":2}},{"generated":{"line":54,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":140,"column":2}},{"generated":{"line":55,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":141,"column":2}},{"generated":{"line":56,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":142,"column":2}},{"generated":{"line":56,"column":61},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":63},"source":"jsm/shaders/VolumeShader.js","original":{"line":143,"column":2}},{"generated":{"line":56,"column":133},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":135},"source":"jsm/shaders/VolumeShader.js","original":{"line":144,"column":2}},{"generated":{"line":56,"column":202},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":204},"source":"jsm/shaders/VolumeShader.js","original":{"line":145,"column":2}},{"generated":{"line":56,"column":274},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":276},"source":"jsm/shaders/VolumeShader.js","original":{"line":146,"column":2}},{"generated":{"line":56,"column":343},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":345},"source":"jsm/shaders/VolumeShader.js","original":{"line":147,"column":2}},{"generated":{"line":56,"column":415},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":417},"source":"jsm/shaders/VolumeShader.js","original":{"line":148,"column":2}},{"generated":{"line":56,"column":484},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":56,"column":486},"source":"jsm/shaders/VolumeShader.js","original":{"line":150,"column":2}},{"generated":{"line":57,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":151,"column":2}},{"generated":{"line":57,"column":54},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":57,"column":56},"source":"jsm/shaders/VolumeShader.js","original":{"line":153,"column":2}},{"generated":{"line":58,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":154,"column":2}},{"generated":{"line":58,"column":63},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":58,"column":65},"source":"jsm/shaders/VolumeShader.js","original":{"line":155,"column":2}},{"generated":{"line":58,"column":88},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":58,"column":90},"source":"jsm/shaders/VolumeShader.js","original":{"line":156,"column":2}},{"generated":{"line":58,"column":106},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":58,"column":108},"source":"jsm/shaders/VolumeShader.js","original":{"line":158,"column":2}},{"generated":{"line":59,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":159,"column":2}},{"generated":{"line":59,"column":68},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":59,"column":70},"source":"jsm/shaders/VolumeShader.js","original":{"line":160,"column":2}},{"generated":{"line":59,"column":108},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":59,"column":110},"source":"jsm/shaders/VolumeShader.js","original":{"line":162,"column":2}},{"generated":{"line":60,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":163,"column":2}},{"generated":{"line":61,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":164,"column":2}},{"generated":{"line":62,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":165,"column":2}},{"generated":{"line":63,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":167,"column":2}},{"generated":{"line":63,"column":31},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":33},"source":"jsm/shaders/VolumeShader.js","original":{"line":168,"column":2}},{"generated":{"line":63,"column":85},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":87},"source":"jsm/shaders/VolumeShader.js","original":{"line":169,"column":2}},{"generated":{"line":63,"column":121},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":123},"source":"jsm/shaders/VolumeShader.js","original":{"line":170,"column":2}},{"generated":{"line":63,"column":175},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":177},"source":"jsm/shaders/VolumeShader.js","original":{"line":172,"column":2}},{"generated":{"line":63,"column":209},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":211},"source":"jsm/shaders/VolumeShader.js","original":{"line":173,"column":2}},{"generated":{"line":63,"column":227},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":229},"source":"jsm/shaders/VolumeShader.js","original":{"line":174,"column":2}},{"generated":{"line":63,"column":234},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":236},"source":"jsm/shaders/VolumeShader.js","original":{"line":177,"column":2}},{"generated":{"line":63,"column":271},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":273},"source":"jsm/shaders/VolumeShader.js","original":{"line":178,"column":2}},{"generated":{"line":63,"column":346},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":348},"source":"jsm/shaders/VolumeShader.js","original":{"line":179,"column":2}},{"generated":{"line":63,"column":394},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":396},"source":"jsm/shaders/VolumeShader.js","original":{"line":180,"column":2}},{"generated":{"line":63,"column":401},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":403},"source":"jsm/shaders/VolumeShader.js","original":{"line":183,"column":2}},{"generated":{"line":63,"column":439},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":441},"source":"jsm/shaders/VolumeShader.js","original":{"line":184,"column":2}},{"generated":{"line":63,"column":497},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":499},"source":"jsm/shaders/VolumeShader.js","original":{"line":185,"column":2}},{"generated":{"line":63,"column":548},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":550},"source":"jsm/shaders/VolumeShader.js","original":{"line":186,"column":2}},{"generated":{"line":63,"column":555},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":557},"source":"jsm/shaders/VolumeShader.js","original":{"line":189,"column":2}},{"generated":{"line":63,"column":630},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":632},"source":"jsm/shaders/VolumeShader.js","original":{"line":191,"column":2}},{"generated":{"line":63,"column":659},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":661},"source":"jsm/shaders/VolumeShader.js","original":{"line":192,"column":2}},{"generated":{"line":63,"column":683},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":685},"source":"jsm/shaders/VolumeShader.js","original":{"line":193,"column":2}},{"generated":{"line":63,"column":712},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":63,"column":714},"source":"jsm/shaders/VolumeShader.js","original":{"line":195,"column":2}},{"generated":{"line":64,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":196,"column":2}},{"generated":{"line":65,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":197,"column":2}},{"generated":{"line":66,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":198,"column":2}},{"generated":{"line":66,"column":50},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":66,"column":52},"source":"jsm/shaders/VolumeShader.js","original":{"line":199,"column":2}},{"generated":{"line":66,"column":79},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":66,"column":81},"source":"jsm/shaders/VolumeShader.js","original":{"line":200,"column":2}},{"generated":{"line":66,"column":97},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":66,"column":99},"source":"jsm/shaders/VolumeShader.js","original":{"line":201,"column":2}},{"generated":{"line":67,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":202,"column":2}},{"generated":{"line":67,"column":35},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":67,"column":37},"source":"jsm/shaders/VolumeShader.js","original":{"line":203,"column":2}},{"generated":{"line":68,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":204,"column":2}},{"generated":{"line":68,"column":30},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":68,"column":32},"source":"jsm/shaders/VolumeShader.js","original":{"line":205,"column":2}},{"generated":{"line":68,"column":56},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":68,"column":58},"source":"jsm/shaders/VolumeShader.js","original":{"line":206,"column":2}},{"generated":{"line":68,"column":81},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":68,"column":83},"source":"jsm/shaders/VolumeShader.js","original":{"line":207,"column":2}},{"generated":{"line":68,"column":92},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":68,"column":94},"source":"jsm/shaders/VolumeShader.js","original":{"line":208,"column":2}},{"generated":{"line":69,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":209,"column":2}},{"generated":{"line":69,"column":22},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":69,"column":24},"source":"jsm/shaders/VolumeShader.js","original":{"line":210,"column":2}},{"generated":{"line":69,"column":31},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":69,"column":33},"source":"jsm/shaders/VolumeShader.js","original":{"line":212,"column":2}},{"generated":{"line":70,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":213,"column":2}},{"generated":{"line":70,"column":60},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":70,"column":62},"source":"jsm/shaders/VolumeShader.js","original":{"line":214,"column":2}},{"generated":{"line":70,"column":112},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":70,"column":114},"source":"jsm/shaders/VolumeShader.js","original":{"line":215,"column":2}},{"generated":{"line":70,"column":160},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":70,"column":162},"source":"jsm/shaders/VolumeShader.js","original":{"line":216,"column":2}},{"generated":{"line":70,"column":208},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":70,"column":210},"source":"jsm/shaders/VolumeShader.js","original":{"line":217,"column":2}},{"generated":{"line":70,"column":232},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":70,"column":234},"source":"jsm/shaders/VolumeShader.js","original":{"line":218,"column":2}},{"generated":{"line":70,"column":241},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":70,"column":243},"source":"jsm/shaders/VolumeShader.js","original":{"line":220,"column":2}},{"generated":{"line":71,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":221,"column":2}},{"generated":{"line":71,"column":47},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":49},"source":"jsm/shaders/VolumeShader.js","original":{"line":222,"column":2}},{"generated":{"line":71,"column":54},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":56},"source":"jsm/shaders/VolumeShader.js","original":{"line":225,"column":2}},{"generated":{"line":71,"column":129},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":131},"source":"jsm/shaders/VolumeShader.js","original":{"line":227,"column":2}},{"generated":{"line":71,"column":182},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":184},"source":"jsm/shaders/VolumeShader.js","original":{"line":228,"column":2}},{"generated":{"line":71,"column":229},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":231},"source":"jsm/shaders/VolumeShader.js","original":{"line":229,"column":2}},{"generated":{"line":71,"column":292},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":294},"source":"jsm/shaders/VolumeShader.js","original":{"line":230,"column":2}},{"generated":{"line":71,"column":321},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":323},"source":"jsm/shaders/VolumeShader.js","original":{"line":232,"column":2}},{"generated":{"line":71,"column":402},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":71,"column":404},"source":"jsm/shaders/VolumeShader.js","original":{"line":234,"column":2}},{"generated":{"line":72,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":235,"column":2}},{"generated":{"line":73,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":236,"column":2}},{"generated":{"line":74,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":237,"column":2}},{"generated":{"line":74,"column":50},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":74,"column":52},"source":"jsm/shaders/VolumeShader.js","original":{"line":238,"column":2}},{"generated":{"line":74,"column":79},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":74,"column":81},"source":"jsm/shaders/VolumeShader.js","original":{"line":239,"column":2}},{"generated":{"line":74,"column":97},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":74,"column":99},"source":"jsm/shaders/VolumeShader.js","original":{"line":241,"column":2}},{"generated":{"line":75,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":242,"column":2}},{"generated":{"line":75,"column":35},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":75,"column":37},"source":"jsm/shaders/VolumeShader.js","original":{"line":244,"column":2}},{"generated":{"line":75,"column":71},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":75,"column":73},"source":"jsm/shaders/VolumeShader.js","original":{"line":245,"column":2}},{"generated":{"line":76,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":246,"column":2}},{"generated":{"line":76,"column":41},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":43},"source":"jsm/shaders/VolumeShader.js","original":{"line":247,"column":2}},{"generated":{"line":76,"column":97},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":99},"source":"jsm/shaders/VolumeShader.js","original":{"line":248,"column":2}},{"generated":{"line":76,"column":149},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":151},"source":"jsm/shaders/VolumeShader.js","original":{"line":249,"column":2}},{"generated":{"line":76,"column":183},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":185},"source":"jsm/shaders/VolumeShader.js","original":{"line":250,"column":2}},{"generated":{"line":76,"column":227},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":229},"source":"jsm/shaders/VolumeShader.js","original":{"line":251,"column":2}},{"generated":{"line":76,"column":299},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":301},"source":"jsm/shaders/VolumeShader.js","original":{"line":252,"column":2}},{"generated":{"line":76,"column":322},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":324},"source":"jsm/shaders/VolumeShader.js","original":{"line":253,"column":2}},{"generated":{"line":76,"column":337},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":339},"source":"jsm/shaders/VolumeShader.js","original":{"line":254,"column":2}},{"generated":{"line":76,"column":365},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":367},"source":"jsm/shaders/VolumeShader.js","original":{"line":255,"column":2}},{"generated":{"line":76,"column":378},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":380},"source":"jsm/shaders/VolumeShader.js","original":{"line":256,"column":2}},{"generated":{"line":76,"column":389},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":76,"column":391},"source":"jsm/shaders/VolumeShader.js","original":{"line":258,"column":2}},{"generated":{"line":77,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":259,"column":2}},{"generated":{"line":77,"column":22},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":77,"column":24},"source":"jsm/shaders/VolumeShader.js","original":{"line":260,"column":2}},{"generated":{"line":77,"column":31},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":77,"column":33},"source":"jsm/shaders/VolumeShader.js","original":{"line":261,"column":2}},{"generated":{"line":77,"column":38},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":77,"column":40},"source":"jsm/shaders/VolumeShader.js","original":{"line":264,"column":2}},{"generated":{"line":77,"column":108},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":77,"column":110},"source":"jsm/shaders/VolumeShader.js","original":{"line":265,"column":2}},{"generated":{"line":77,"column":115},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":77,"column":117},"source":"jsm/shaders/VolumeShader.js","original":{"line":266,"column":2}},{"generated":{"line":78,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":268,"column":2}},{"generated":{"line":79,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":269,"column":2}},{"generated":{"line":79,"column":37},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":79,"column":39},"source":"jsm/shaders/VolumeShader.js","original":{"line":271,"column":2}},{"generated":{"line":80,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":272,"column":2}},{"generated":{"line":80,"column":15},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":17},"source":"jsm/shaders/VolumeShader.js","original":{"line":273,"column":2}},{"generated":{"line":80,"column":40},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":42},"source":"jsm/shaders/VolumeShader.js","original":{"line":274,"column":2}},{"generated":{"line":80,"column":95},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":97},"source":"jsm/shaders/VolumeShader.js","original":{"line":275,"column":2}},{"generated":{"line":80,"column":150},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":152},"source":"jsm/shaders/VolumeShader.js","original":{"line":276,"column":2}},{"generated":{"line":80,"column":177},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":179},"source":"jsm/shaders/VolumeShader.js","original":{"line":277,"column":2}},{"generated":{"line":80,"column":217},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":219},"source":"jsm/shaders/VolumeShader.js","original":{"line":278,"column":2}},{"generated":{"line":80,"column":272},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":274},"source":"jsm/shaders/VolumeShader.js","original":{"line":279,"column":2}},{"generated":{"line":80,"column":327},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":329},"source":"jsm/shaders/VolumeShader.js","original":{"line":280,"column":2}},{"generated":{"line":80,"column":354},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":356},"source":"jsm/shaders/VolumeShader.js","original":{"line":281,"column":2}},{"generated":{"line":80,"column":394},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":396},"source":"jsm/shaders/VolumeShader.js","original":{"line":282,"column":2}},{"generated":{"line":80,"column":449},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":451},"source":"jsm/shaders/VolumeShader.js","original":{"line":283,"column":2}},{"generated":{"line":80,"column":504},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":506},"source":"jsm/shaders/VolumeShader.js","original":{"line":284,"column":2}},{"generated":{"line":80,"column":531},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":533},"source":"jsm/shaders/VolumeShader.js","original":{"line":285,"column":2}},{"generated":{"line":80,"column":571},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":573},"source":"jsm/shaders/VolumeShader.js","original":{"line":287,"column":2}},{"generated":{"line":80,"column":622},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":624},"source":"jsm/shaders/VolumeShader.js","original":{"line":288,"column":2}},{"generated":{"line":80,"column":647},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":80,"column":649},"source":"jsm/shaders/VolumeShader.js","original":{"line":290,"column":2}},{"generated":{"line":81,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":291,"column":2}},{"generated":{"line":81,"column":47},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":81,"column":49},"source":"jsm/shaders/VolumeShader.js","original":{"line":292,"column":2}},{"generated":{"line":81,"column":122},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":81,"column":124},"source":"jsm/shaders/VolumeShader.js","original":{"line":294,"column":2}},{"generated":{"line":82,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":295,"column":2}},{"generated":{"line":82,"column":54},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":82,"column":56},"source":"jsm/shaders/VolumeShader.js","original":{"line":296,"column":2}},{"generated":{"line":82,"column":108},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":82,"column":110},"source":"jsm/shaders/VolumeShader.js","original":{"line":297,"column":2}},{"generated":{"line":82,"column":163},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":82,"column":165},"source":"jsm/shaders/VolumeShader.js","original":{"line":299,"column":2}},{"generated":{"line":83,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":300,"column":2}},{"generated":{"line":83,"column":31},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":83,"column":33},"source":"jsm/shaders/VolumeShader.js","original":{"line":301,"column":2}},{"generated":{"line":83,"column":40},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":83,"column":42},"source":"jsm/shaders/VolumeShader.js","original":{"line":302,"column":9}},{"generated":{"line":84,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":303,"column":2}},{"generated":{"line":84,"column":55},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":84,"column":57},"source":"jsm/shaders/VolumeShader.js","original":{"line":304,"column":2}},{"generated":{"line":84,"column":111},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":84,"column":113},"source":"jsm/shaders/VolumeShader.js","original":{"line":305,"column":2}},{"generated":{"line":84,"column":161},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":84,"column":163},"source":"jsm/shaders/VolumeShader.js","original":{"line":307,"column":2}},{"generated":{"line":85,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":308,"column":2}},{"generated":{"line":85,"column":57},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":85,"column":59},"source":"jsm/shaders/VolumeShader.js","original":{"line":309,"column":2}},{"generated":{"line":85,"column":109},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":85,"column":111},"source":"jsm/shaders/VolumeShader.js","original":{"line":310,"column":2}},{"generated":{"line":85,"column":176},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":85,"column":178},"source":"jsm/shaders/VolumeShader.js","original":{"line":312,"column":2}},{"generated":{"line":86,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":313,"column":2}},{"generated":{"line":86,"column":37},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":86,"column":39},"source":"jsm/shaders/VolumeShader.js","original":{"line":315,"column":2}},{"generated":{"line":87,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":316,"column":2}},{"generated":{"line":87,"column":81},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":87,"column":83},"source":"jsm/shaders/VolumeShader.js","original":{"line":317,"column":2}},{"generated":{"line":87,"column":128},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":87,"column":130},"source":"jsm/shaders/VolumeShader.js","original":{"line":318,"column":2}},{"generated":{"line":87,"column":194},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":87,"column":196},"source":"jsm/shaders/VolumeShader.js","original":{"line":319,"column":2}},{"generated":{"line":87,"column":203},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":87,"column":205},"source":"jsm/shaders/VolumeShader.js","original":{"line":321,"column":2}},{"generated":{"line":88,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":322,"column":2}},{"generated":{"line":88,"column":25},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":88,"column":27},"source":"jsm/shaders/VolumeShader.js","original":{"line":323,"column":2}},{"generated":{"line":88,"column":66},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":88,"column":68},"source":"jsm/shaders/VolumeShader.js","original":{"line":324,"column":2}},{"generated":{"line":88,"column":145},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":88,"column":147},"source":"jsm/shaders/VolumeShader.js","original":{"line":325,"column":2}},{"generated":{"line":88,"column":177},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":88,"column":179},"source":"jsm/shaders/VolumeShader.js","original":{"line":326,"column":2}},{"generated":{"line":88,"column":204},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":88,"column":206},"source":"jsm/shaders/VolumeShader.js","original":{"line":327,"column":2}},{"generated":{"line":88,"column":211},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"name":"join","generated":{"line":88,"column":213},"source":"jsm/shaders/VolumeShader.js","original":{"line":328,"column":3}},{"generated":{"line":88,"column":217},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":88,"column":218},"source":"jsm/shaders/VolumeShader.js","original":{"line":328,"column":9}},{"generated":{"line":88,"column":222},"source":"jsm/shaders/VolumeShader.js","original":{"line":98,"column":17}},{"generated":{"line":89,"column":0},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":26}},{"generated":{"line":89,"column":1},"source":"jsm/shaders/VolumeShader.js","original":{"line":14,"column":0}}],"sources":{"jsm/shaders/VolumeShader.js":"/**\n * @author Almar Klein / http://almarklein.org\n *\n * Shaders to render 3D volumes using raycasting.\n * The applied techniques are based on similar implementations in the Visvis and Vispy projects.\n * This is not the only approach, therefore it's marked 1.\n */\n\nimport {\n\tVector2,\n\tVector3\n} from \"three\";\n\nvar VolumeRenderShader1 = {\n\tuniforms: {\n\t\t\"u_size\": { value: new Vector3( 1, 1, 1 ) },\n\t\t\"u_renderstyle\": { value: 0 },\n\t\t\"u_renderthreshold\": { value: 0.5 },\n\t\t\"u_clim\": { value: new Vector2( 1, 1 ) },\n\t\t\"u_data\": { value: null },\n\t\t\"u_cmdata\": { value: null }\n\t},\n\tvertexShader: [\n\t\t\"\t\tvarying vec4 v_nearpos;\",\n\t\t\"\t\tvarying vec4 v_farpos;\",\n\t\t\"\t\tvarying vec3 v_position;\",\n\n\t\t\"\t\tmat4 inversemat(mat4 m) {\",\n\t\t// Taken from https://github.com/stackgl/glsl-inverse/blob/master/index.glsl\n\t\t// This function is licenced by the MIT license to Mikola Lysenko\n\t\t\"\t\t\t\tfloat\",\n\t\t\"\t\t\t\ta00 = m[0][0], a01 = m[0][1], a02 = m[0][2], a03 = m[0][3],\",\n\t\t\"\t\t\t\ta10 = m[1][0], a11 = m[1][1], a12 = m[1][2], a13 = m[1][3],\",\n\t\t\"\t\t\t\ta20 = m[2][0], a21 = m[2][1], a22 = m[2][2], a23 = m[2][3],\",\n\t\t\"\t\t\t\ta30 = m[3][0], a31 = m[3][1], a32 = m[3][2], a33 = m[3][3],\",\n\n\t\t\"\t\t\t\tb00 = a00 * a11 - a01 * a10,\",\n\t\t\"\t\t\t\tb01 = a00 * a12 - a02 * a10,\",\n\t\t\"\t\t\t\tb02 = a00 * a13 - a03 * a10,\",\n\t\t\"\t\t\t\tb03 = a01 * a12 - a02 * a11,\",\n\t\t\"\t\t\t\tb04 = a01 * a13 - a03 * a11,\",\n\t\t\"\t\t\t\tb05 = a02 * a13 - a03 * a12,\",\n\t\t\"\t\t\t\tb06 = a20 * a31 - a21 * a30,\",\n\t\t\"\t\t\t\tb07 = a20 * a32 - a22 * a30,\",\n\t\t\"\t\t\t\tb08 = a20 * a33 - a23 * a30,\",\n\t\t\"\t\t\t\tb09 = a21 * a32 - a22 * a31,\",\n\t\t\"\t\t\t\tb10 = a21 * a33 - a23 * a31,\",\n\t\t\"\t\t\t\tb11 = a22 * a33 - a23 * a32,\",\n\n\t\t\"\t\t\t\tdet = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\",\n\n\t\t\"\t\treturn mat4(\",\n\t\t\"\t\t\t\ta11 * b11 - a12 * b10 + a13 * b09,\",\n\t\t\"\t\t\t\ta02 * b10 - a01 * b11 - a03 * b09,\",\n\t\t\"\t\t\t\ta31 * b05 - a32 * b04 + a33 * b03,\",\n\t\t\"\t\t\t\ta22 * b04 - a21 * b05 - a23 * b03,\",\n\t\t\"\t\t\t\ta12 * b08 - a10 * b11 - a13 * b07,\",\n\t\t\"\t\t\t\ta00 * b11 - a02 * b08 + a03 * b07,\",\n\t\t\"\t\t\t\ta32 * b02 - a30 * b05 - a33 * b01,\",\n\t\t\"\t\t\t\ta20 * b05 - a22 * b02 + a23 * b01,\",\n\t\t\"\t\t\t\ta10 * b10 - a11 * b08 + a13 * b06,\",\n\t\t\"\t\t\t\ta01 * b08 - a00 * b10 - a03 * b06,\",\n\t\t\"\t\t\t\ta30 * b04 - a31 * b02 + a33 * b00,\",\n\t\t\"\t\t\t\ta21 * b02 - a20 * b04 - a23 * b00,\",\n\t\t\"\t\t\t\ta11 * b07 - a10 * b09 - a12 * b06,\",\n\t\t\"\t\t\t\ta00 * b09 - a01 * b07 + a02 * b06,\",\n\t\t\"\t\t\t\ta31 * b01 - a30 * b03 - a32 * b00,\",\n\t\t\"\t\t\t\ta20 * b03 - a21 * b01 + a22 * b00) / det;\",\n\t\t\"\t\t}\",\n\n\n\t\t\"\t\tvoid main() {\",\n\t\t// Prepare transforms to map to \"camera view\". See also:\n\t\t// https://threejs.org/docs/#api/renderers/webgl/WebGLProgram\n\t\t\"\t\t\t\tmat4 viewtransformf = modelViewMatrix;\",\n\t\t\"\t\t\t\tmat4 viewtransformi = inversemat(modelViewMatrix);\",\n\n\t\t// Project local vertex coordinate to camera position. Then do a step\n\t\t// backward (in cam coords) to the near clipping plane, and project back. Do\n\t\t// the same for the far clipping plane. This gives us all the information we\n\t\t// need to calculate the ray and truncate it to the viewing cone.\n\t\t\"\t\t\t\tvec4 position4 = vec4(position, 1.0);\",\n\t\t\"\t\t\t\tvec4 pos_in_cam = viewtransformf * position4;\",\n\n\t\t// Intersection of ray and near clipping plane (z = -1 in clip coords)\n\t\t\"\t\t\t\tpos_in_cam.z = -pos_in_cam.w;\",\n\t\t\"\t\t\t\tv_nearpos = viewtransformi * pos_in_cam;\",\n\n\t\t// Intersection of ray and far clipping plane (z = +1 in clip coords)\n\t\t\"\t\t\t\tpos_in_cam.z = pos_in_cam.w;\",\n\t\t\"\t\t\t\tv_farpos = viewtransformi * pos_in_cam;\",\n\n\t\t// Set varyings and output pos\n\t\t\"\t\t\t\tv_position = position;\",\n\t\t\"\t\t\t\tgl_Position = projectionMatrix * viewMatrix * modelMatrix * position4;\",\n\t\t\"\t\t}\",\n\t].join( \"\\n\" ),\n\tfragmentShader: [\n\t\t\"\t\tprecision highp float;\",\n\t\t\"\t\tprecision mediump sampler3D;\",\n\n\t\t\"\t\tuniform vec3 u_size;\",\n\t\t\"\t\tuniform int u_renderstyle;\",\n\t\t\"\t\tuniform float u_renderthreshold;\",\n\t\t\"\t\tuniform vec2 u_clim;\",\n\n\t\t\"\t\tuniform sampler3D u_data;\",\n\t\t\"\t\tuniform sampler2D u_cmdata;\",\n\n\t\t\"\t\tvarying vec3 v_position;\",\n\t\t\"\t\tvarying vec4 v_nearpos;\",\n\t\t\"\t\tvarying vec4 v_farpos;\",\n\n\t\t// The maximum distance through our rendering volume is sqrt(3).\n\t\t\"\t\tconst int MAX_STEPS = 887;\t// 887 for 512^3, 1774 for 1024^3\",\n\t\t\"\t\tconst int REFINEMENT_STEPS = 4;\",\n\t\t\"\t\tconst float relative_step_size = 1.0;\",\n\t\t\"\t\tconst vec4 ambient_color = vec4(0.2, 0.4, 0.2, 1.0);\",\n\t\t\"\t\tconst vec4 diffuse_color = vec4(0.8, 0.2, 0.2, 1.0);\",\n\t\t\"\t\tconst vec4 specular_color = vec4(1.0, 1.0, 1.0, 1.0);\",\n\t\t\"\t\tconst float shininess = 40.0;\",\n\n\t\t\"\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);\",\n\t\t\"\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray);\",\n\n\t\t\"\t\tfloat sample1(vec3 texcoords);\",\n\t\t\"\t\tvec4 apply_colormap(float val);\",\n\t\t\"\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray);\",\n\n\n\t\t\"\t\tvoid main() {\",\n\t\t// Normalize clipping plane info\n\t\t\"\t\t\t\tvec3 farpos = v_farpos.xyz / v_farpos.w;\",\n\t\t\"\t\t\t\tvec3 nearpos = v_nearpos.xyz / v_nearpos.w;\",\n\n\t\t// Calculate unit vector pointing in the view direction through this fragment.\n\t\t\"\t\t\t\tvec3 view_ray = normalize(nearpos.xyz - farpos.xyz);\",\n\n\t\t// Compute the (negative) distance to the front surface or near clipping plane.\n\t\t// v_position is the back face of the cuboid, so the initial distance calculated in the dot\n\t\t// product below is the distance from near clip plane to the back of the cuboid\n\t\t\"\t\t\t\tfloat distance = dot(nearpos - v_position, view_ray);\",\n\t\t\"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.x) / view_ray.x,\",\n\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.x - 0.5 - v_position.x) / view_ray.x));\",\n\t\t\"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.y) / view_ray.y,\",\n\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.y - 0.5 - v_position.y) / view_ray.y));\",\n\t\t\"\t\t\t\tdistance = max(distance, min((-0.5 - v_position.z) / view_ray.z,\",\n\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(u_size.z - 0.5 - v_position.z) / view_ray.z));\",\n\n\t\t// Now we have the starting position on the front surface\n\t\t\"\t\t\t\tvec3 front = v_position + view_ray * distance;\",\n\n\t\t// Decide how many steps to take\n\t\t\"\t\t\t\tint nsteps = int(-distance / relative_step_size + 0.5);\",\n\t\t\"\t\t\t\tif ( nsteps < 1 )\",\n\t\t\"\t\t\t\t\t\tdiscard;\",\n\n\t\t// Get starting location and step vector in texture coordinates\n\t\t\"\t\t\t\tvec3 step = ((v_position - front) / u_size) / float(nsteps);\",\n\t\t\"\t\t\t\tvec3 start_loc = front / u_size;\",\n\n\t\t// For testing: show the number of steps. This helps to establish\n\t\t// whether the rays are correctly oriented\n\t\t//'gl_FragColor = vec4(0.0, float(nsteps) / 1.0 / u_size.x, 1.0, 1.0);',\n\t\t//'return;',\n\n\t\t\"\t\t\t\tif (u_renderstyle == 0)\",\n\t\t\"\t\t\t\t\t\tcast_mip(start_loc, step, nsteps, view_ray);\",\n\t\t\"\t\t\t\telse if (u_renderstyle == 1)\",\n\t\t\"\t\t\t\t\t\tcast_iso(start_loc, step, nsteps, view_ray);\",\n\n\t\t\"\t\t\t\tif (gl_FragColor.a < 0.05)\",\n\t\t\"\t\t\t\t\t\tdiscard;\",\n\t\t\"\t\t}\",\n\n\n\t\t\"\t\tfloat sample1(vec3 texcoords) {\",\n\t\t\"\t\t\t\t/* Sample float value from a 3D texture. Assumes intensity data. */\",\n\t\t\"\t\t\t\treturn texture(u_data, texcoords.xyz).r;\",\n\t\t\"\t\t}\",\n\n\n\t\t\"\t\tvec4 apply_colormap(float val) {\",\n\t\t\"\t\t\t\tval = (val - u_clim[0]) / (u_clim[1] - u_clim[0]);\",\n\t\t\"\t\t\t\treturn texture2D(u_cmdata, vec2(val, 0.5));\",\n\t\t\"\t\t}\",\n\n\n\t\t\"\t\tvoid cast_mip(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {\",\n\n\t\t\"\t\t\t\tfloat max_val = -1e6;\",\n\t\t\"\t\t\t\tint max_i = 100;\",\n\t\t\"\t\t\t\tvec3 loc = start_loc;\",\n\n\t\t// Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n\t\t// non-constant expression. So we use a hard-coded max, and an additional condition\n\t\t// inside the loop.\n\t\t\"\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {\",\n\t\t\"\t\t\t\t\t\tif (iter >= nsteps)\",\n\t\t\"\t\t\t\t\t\t\t\tbreak;\",\n\t\t// Sample from the 3D texture\n\t\t\"\t\t\t\t\t\tfloat val = sample1(loc);\",\n\t\t// Apply MIP operation\n\t\t\"\t\t\t\t\t\tif (val > max_val) {\",\n\t\t\"\t\t\t\t\t\t\t\tmax_val = val;\",\n\t\t\"\t\t\t\t\t\t\t\tmax_i = iter;\",\n\t\t\"\t\t\t\t\t\t}\",\n\t\t// Advance location deeper into the volume\n\t\t\"\t\t\t\t\t\tloc += step;\",\n\t\t\"\t\t\t\t}\",\n\n\t\t// Refine location, gives crispier images\n\t\t\"\t\t\t\tvec3 iloc = start_loc + step * (float(max_i) - 0.5);\",\n\t\t\"\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);\",\n\t\t\"\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {\",\n\t\t\"\t\t\t\t\t\tmax_val = max(max_val, sample1(iloc));\",\n\t\t\"\t\t\t\t\t\tiloc += istep;\",\n\t\t\"\t\t\t\t}\",\n\n\t\t// Resolve final color\n\t\t\"\t\t\t\tgl_FragColor = apply_colormap(max_val);\",\n\t\t\"\t\t}\",\n\n\n\t\t\"\t\tvoid cast_iso(vec3 start_loc, vec3 step, int nsteps, vec3 view_ray) {\",\n\n\t\t\"\t\t\t\tgl_FragColor = vec4(0.0);\t// init transparent\",\n\t\t\"\t\t\t\tvec4 color3 = vec4(0.0);\t// final color\",\n\t\t\"\t\t\t\tvec3 dstep = 1.5 / u_size;\t// step to sample derivative\",\n\t\t\"\t\t\t\tvec3 loc = start_loc;\",\n\n\t\t\"\t\t\t\tfloat low_threshold = u_renderthreshold - 0.02 * (u_clim[1] - u_clim[0]);\",\n\n\t\t// Enter the raycasting loop. In WebGL 1 the loop index cannot be compared with\n\t\t// non-constant expression. So we use a hard-coded max, and an additional condition\n\t\t// inside the loop.\n\t\t\"\t\t\t\tfor (int iter=0; iter<MAX_STEPS; iter++) {\",\n\t\t\"\t\t\t\t\t\tif (iter >= nsteps)\",\n\t\t\"\t\t\t\t\t\t\t\tbreak;\",\n\n\t\t// Sample from the 3D texture\n\t\t\"\t\t\t\t\t\tfloat val = sample1(loc);\",\n\n\t\t\"\t\t\t\t\t\tif (val > low_threshold) {\",\n\t\t// Take the last interval in smaller steps\n\t\t\"\t\t\t\t\t\t\t\tvec3 iloc = loc - 0.5 * step;\",\n\t\t\"\t\t\t\t\t\t\t\tvec3 istep = step / float(REFINEMENT_STEPS);\",\n\t\t\"\t\t\t\t\t\t\t\tfor (int i=0; i<REFINEMENT_STEPS; i++) {\",\n\t\t\"\t\t\t\t\t\t\t\t\t\tval = sample1(iloc);\",\n\t\t\"\t\t\t\t\t\t\t\t\t\tif (val > u_renderthreshold) {\",\n\t\t\"\t\t\t\t\t\t\t\t\t\t\t\tgl_FragColor = add_lighting(val, iloc, dstep, view_ray);\",\n\t\t\"\t\t\t\t\t\t\t\t\t\t\t\treturn;\",\n\t\t\"\t\t\t\t\t\t\t\t\t\t}\",\n\t\t\"\t\t\t\t\t\t\t\t\t\tiloc += istep;\",\n\t\t\"\t\t\t\t\t\t\t\t}\",\n\t\t\"\t\t\t\t\t\t}\",\n\n\t\t// Advance location deeper into the volume\n\t\t\"\t\t\t\t\t\tloc += step;\",\n\t\t\"\t\t\t\t}\",\n\t\t\"\t\t}\",\n\n\n\t\t\"\t\tvec4 add_lighting(float val, vec3 loc, vec3 step, vec3 view_ray)\",\n\t\t\"\t\t{\",\n\t\t// Calculate color by incorporating lighting\n\n\t\t// View direction\n\t\t\"\t\t\t\tvec3 V = normalize(view_ray);\",\n\n\t\t// calculate normal vector from gradient\n\t\t\"\t\t\t\tvec3 N;\",\n\t\t\"\t\t\t\tfloat val1, val2;\",\n\t\t\"\t\t\t\tval1 = sample1(loc + vec3(-step[0], 0.0, 0.0));\",\n\t\t\"\t\t\t\tval2 = sample1(loc + vec3(+step[0], 0.0, 0.0));\",\n\t\t\"\t\t\t\tN[0] = val1 - val2;\",\n\t\t\"\t\t\t\tval = max(max(val1, val2), val);\",\n\t\t\"\t\t\t\tval1 = sample1(loc + vec3(0.0, -step[1], 0.0));\",\n\t\t\"\t\t\t\tval2 = sample1(loc + vec3(0.0, +step[1], 0.0));\",\n\t\t\"\t\t\t\tN[1] = val1 - val2;\",\n\t\t\"\t\t\t\tval = max(max(val1, val2), val);\",\n\t\t\"\t\t\t\tval1 = sample1(loc + vec3(0.0, 0.0, -step[2]));\",\n\t\t\"\t\t\t\tval2 = sample1(loc + vec3(0.0, 0.0, +step[2]));\",\n\t\t\"\t\t\t\tN[2] = val1 - val2;\",\n\t\t\"\t\t\t\tval = max(max(val1, val2), val);\",\n\n\t\t\"\t\t\t\tfloat gm = length(N); // gradient magnitude\",\n\t\t\"\t\t\t\tN = normalize(N);\",\n\n\t\t// Flip normal so it points towards viewer\n\t\t\"\t\t\t\tfloat Nselect = float(dot(N, V) > 0.0);\",\n\t\t\"\t\t\t\tN = (2.0 * Nselect - 1.0) * N;\t// ==\tNselect * N - (1.0-Nselect)*N;\",\n\n\t\t// Init colors\n\t\t\"\t\t\t\tvec4 ambient_color = vec4(0.0, 0.0, 0.0, 0.0);\",\n\t\t\"\t\t\t\tvec4 diffuse_color = vec4(0.0, 0.0, 0.0, 0.0);\",\n\t\t\"\t\t\t\tvec4 specular_color = vec4(0.0, 0.0, 0.0, 0.0);\",\n\n\t\t// note: could allow multiple lights\n\t\t\"\t\t\t\tfor (int i=0; i<1; i++)\",\n\t\t\"\t\t\t\t{\",\n\t\t\t\t\t\t\t\t // Get light direction (make sure to prevent zero devision)\n\t\t\"\t\t\t\t\t\tvec3 L = normalize(view_ray);\t//lightDirs[i];\",\n\t\t\"\t\t\t\t\t\tfloat lightEnabled = float( length(L) > 0.0 );\",\n\t\t\"\t\t\t\t\t\tL = normalize(L + (1.0 - lightEnabled));\",\n\n\t\t// Calculate lighting properties\n\t\t\"\t\t\t\t\t\tfloat lambertTerm = clamp(dot(N, L), 0.0, 1.0);\",\n\t\t\"\t\t\t\t\t\tvec3 H = normalize(L+V); // Halfway vector\",\n\t\t\"\t\t\t\t\t\tfloat specularTerm = pow(max(dot(H, N), 0.0), shininess);\",\n\n\t\t// Calculate mask\n\t\t\"\t\t\t\t\t\tfloat mask1 = lightEnabled;\",\n\n\t\t// Calculate colors\n\t\t\"\t\t\t\t\t\tambient_color +=\tmask1 * ambient_color;\t// * gl_LightSource[i].ambient;\",\n\t\t\"\t\t\t\t\t\tdiffuse_color +=\tmask1 * lambertTerm;\",\n\t\t\"\t\t\t\t\t\tspecular_color += mask1 * specularTerm * specular_color;\",\n\t\t\"\t\t\t\t}\",\n\n\t\t// Calculate final color by componing different components\n\t\t\"\t\t\t\tvec4 final_color;\",\n\t\t\"\t\t\t\tvec4 color = apply_colormap(val);\",\n\t\t\"\t\t\t\tfinal_color = color * (ambient_color + diffuse_color) + specular_color;\",\n\t\t\"\t\t\t\tfinal_color.a = color.a;\",\n\t\t\"\t\t\t\treturn final_color;\",\n\t\t\"\t\t}\",\n\t].join( \"\\n\" )\n};\n\nexport { VolumeRenderShader1 };\n"},"lineCount":null}},"error":null,"hash":"f8590cdecc093461d4b71bac1a008a44","cacheData":{"env":{}}}